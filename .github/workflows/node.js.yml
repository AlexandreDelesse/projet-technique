# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    paths:
      - "client/**"
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
    PROJECT_ID: ${{ secrets.PROJECT_ID }}
    RUN_REGION: europe-west1
    SERVICE_NAME: test-service

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        
    - uses: google-github-actions/setup-gcloud@master
      with:
          version: '338.0.0'
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}
                  
    - name: install dependenties
      run: |
        cd client
        npm install
        
    - name: run build
      run: |
        cd client
        npm run build --prod --base-href="/don-du-sang/"
        
    - name: copy dockerfile
      run: |
        cd client
        mv ./Dockerfile ./dist
    
    - name: gcloud Set up
      run: |
        cd client/dist
        gcloud config set project ${{ secrets.PROJECT_ID }}
          
    # Build and push image to Google Container Registry
    - name: Build
      run: |
        cd client/dist
        gcloud builds submit -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
          
    # Deploy image to Cloud Run
    - name: Deploy
      run: |
          gcloud run deploy $SERVICE_NAME \
            --region $RUN_REGION \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --port=80
                  
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: don-du-sang--${{ github.run_id }}
        path: "client/dist/**"
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
